{"version":3,"sources":["utils/hooks.ts","api/socket.js","Server/OnlineServer.ts","api/API.ts","stores/features/gameSlice.ts","Components/Shared/Avatar/Avatar.jsx","Components/Shared/Button/Button.jsx","Components/Game/Scoreboard/Scoreboard.jsx","Components/Game/Question/Question.jsx","Components/Shared/Typography/Typography.jsx","Components/Game/PlayersStack/PlayerStack.jsx","Components/Game/PlayerReady/PlayerReady.jsx","Components/Game/Board/Board.jsx","Components/Game/Surprise/Surprise.jsx","Components/Game/RemovedPlayer/RemovedPlayer.jsx","Components/Game/Game.tsx","Components/Shared/Paper/Paper.jsx","Components/Shared/TextField/TextField.jsx","Components/CreateUser/ReChoiceIcon.jsx","Components/CreateUser/CreateUser.jsx","Components/MainMenu/MainMenu.jsx","Components/Shared/Switch/Switch.jsx","Components/CreateServer/CreateServer.jsx","Components/Shared/Table/Table.jsx","Components/JoinServer/JoinServer.jsx","Components/WaitingLobby/Loding.jsx","Components/WaitingLobby/Lobby.jsx","stores/store.ts","Components/StartPage/StartPage.jsx","utils/audio.js","utils/EventsObject.js","utils/loader.ts","Components/Shared/Loading/Loading.jsx","Components/Shared/ErrorBoundary/ErrorBoundary.jsx","App.js","index.js"],"names":["useDispatch","useReduxDispatch","useSelector","useReduxSelector","socket","io","connect","reconnectionAttempts","OnlineServer","player","Promise","res","rej","emit","err","servers","console","log","players","serverName","serverPassword","getPlayer","playerId","serverId","setTimeout","index","answerIndex","cb","on","off","this","removeAllListeners","name","localStorage","getItem","img","API","isOnline","_server","setOnlineMode","connected","startQuestions","next","nextPlayer","onNextPlayer","onQuestionAnswer","onNextQuestion","getPlayerSurprise","onPlayerSurprise","getServers","getServerPlayers","createServer","joinServer","emitReady","leaveServer","onPlayersUpdated","onPlayerRemoved","unsub","onGameInit","onPlayerLeft","onFinishGame","gameSlice","createSlice","initialState","inGame","reducers","setPlayerId","state","action","payload","init","token","points","waitingToStartWithQuestions","currentPlayer","currentPlayerId","id","surprise","removedPlayer","questionNumber","setQuestion","question","playable","removeQuestion","setQuestionAnswer","answerQuestion","setNextPlayer","moveCurrentPlayer","position","updatePlayers","setSurprise","setRemovedPlayer","setPlayers","stopGame","setInLobby","inLobby","actions","CAvatar","styled","div","props","border","color","removed","Avatar","seed","src","alt","CButton","MuiButton","Button","children","href","navigate","useNavigate","onClick","disabled","Root","Scoreboard","winner","variant","textAlign","fontWeight","mb","className","Grid","container","justifyContent","mt","to","Question","dispatch","q","game","decodeURIComponent","answers","map","answer","i","Ctypography","MuiTypography","Typography","PlayersStack","item","flexWrap","alignItems","spacing","gap","xs","Stack","PlayerReady","interval","useRef","useState","seconds","setSeconds","useEffect","current","setInterval","clearInterval","playerName","filter","el","Tile","topPos","leftPos","Player","Board","Array","Surprise","message","RemovedPlayer","Game","finished","setFinished","setWinner","movePlayer","startPosition","endPosition","direction","timeoutReady","newPlayers","winnerPlayer","clearTimeout","replace","Paper","APaper","as","motion","initial","opacity","x","animate","exit","transition","duration","md","lg","CTextField","input","TextField","ReChoiceIcon","style","width","focusable","class","role","xmlns","viewBox","fill","d","CreateUser","setPlayerName","JSON","parse","Math","random","imgSeed","setImgSeed","setItem","type","placeholder","value","onChange","e","target","pad","sx","height","padding","MainMenu","onPlayOnline","playOnline","fontSize","display","switchUnstyledClasses","track","thumb","focusVisible","checked","UnstyledSwitches","SwitchUnstyled","component","componentsProps","defaultChecked","CreateServer","setServerName","setServerPassword","isPrivate","setIsPrivate","handleCreateServer","a","label","sm","marginTop","textShadow","Switch","TableContainer","TableHead","TableCell","p","TableBody","Table","CTableRow","CTableCell","JoinServer","showPrivate","setShowPrivate","selectedServer","setSelectedServer","password","setPassword","selectOne","setSelectOne","setServers","handleJoinServer","Checkbox","server","backgroundColor","borderWidth","borderRadius","boxShadow","background","cntPlayers","CLoading","span","Loding","Span","Lobby","location","useLocation","timeout","unsubInit","serverPlayers","pathname","length","store","configureStore","reducer","StartPage","mounted","setMounted","y","stiffness","h3","repeat","Infinity","times","ease","delay","onAnimationComplete","_GameAudio","musicVolume","effectsVolume","audioTracks","onload","Object","values","url","audio","Audio","addEventListener","Error","musicPlaying","volume","play","loop","reps","newVolume","GameAudio","EventsObject","events","handler","hasOwnProperty","push","removeEventListener","indexOf","splice","args","evs","l","Loader","imgs","audios","music","shuffle","draw","totalCnt","loadedCnt","onProgress","bind","keys","preload","preloadImage","_img","Image","error","fireEvent","Loading","onLoaded","percentage","setPercentage","completed","setCompleted","load","round","ErrorBoundary","errorInfo","setState","React","Component","App","loadingAssets","setLoadingAssets","playMusic","AnimatePresence","exitBeforeEnter","path","element","key","ReactDOM","render","StrictMode","basename","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.08d45884.chunk.js","sourcesContent":["import {\n  TypedUseSelectorHook,\n  useDispatch as useReduxDispatch,\n  useSelector as useReduxSelector,\n} from \"react-redux\";\nimport { AppDispatch, RootState } from \"../stores/store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\n","import io from \"socket.io-client\";\n\nexport const socket = io.connect(\"http://localhost:5001\");\n\nsocket.reconnectionAttempts = 3;\n","import { GameServer, Player } from \"../utils/interfaces\";\nimport { ServerInterface } from \"./ServerInterface\";\nimport { socket } from \"../api/socket\";\n\nexport class OnlineServer implements ServerInterface {\n  player?: Player;\n\n  getServers(): Promise<GameServer[]> {\n    return new Promise((res, rej) => {\n      socket.emit(\"get-servers\", null, (err: any, servers: GameServer[]) => {\n        if (err) return rej(err);\n        console.log(servers);\n\n        res(servers);\n      });\n    });\n  }\n\n  getServerPlayers(): Promise<Player[]> {\n    return new Promise((res, rej) => {\n      socket.emit(\"get-server-players\", null, (err: any, players: Player[]) => {\n        if (err) return rej(err);\n        res(players);\n      });\n    });\n  }\n\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\n    return new Promise((res, rej) => {\n      socket.emit(\n        \"create-server\",\n        { serverName, serverPassword, player: this.getPlayer() },\n        (err: any, playerId: string) => {\n          if (err) return rej(err);\n          res(playerId);\n        }\n      );\n    });\n  }\n\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\n    return new Promise((res, rej) => {\n      socket.emit(\n        \"join-server\",\n        { serverId, serverPassword, player: this.getPlayer() },\n        (err: any, playerId: string) => {\n          if (err) {\n            return rej(err);\n          }\n          setTimeout(() => {\n            // socket.emit(\"add-bots\");\n          }, 2000);\n          res(playerId);\n        }\n      );\n    });\n  }\n\n  next(index: number): void {\n    socket.emit(\"next\", { answerIndex: index });\n  }\n\n  nextPlayer(): void {\n    socket.emit(\"next-player\");\n  }\n\n  onQuestionAnswer(cb: (data: number) => void): () => void {\n    socket.on(\"question-answer\", cb);\n    return () => socket.off(\"question-answer\", cb);\n  }\n\n  onNextPlayer(cb: (data: number) => void): () => void {\n    socket.on(\"next-player\", cb);\n    return () => socket.off(\"next-player\", cb);\n  }\n\n  startQuestions(): void {\n    socket.emit(\"start-questions\");\n  }\n\n  emitReady(): void {\n    console.log(\"start-game\");\n    socket.emit(\"start-game\");\n  }\n\n  leaveServer(): void {\n    socket.emit(\"leave-server\");\n    this.removeAllListeners();\n  }\n\n  getPlayerSurprise(): void {\n    socket.emit(\"get-player-surprise\");\n  }\n\n  onPlayersUpdated(\n    cb: (data: {\n      startPosition: number;\n      endPosition: number;\n      direction: number;\n      currentPlayerId: string;\n    }) => void\n  ): () => void {\n    socket.on(\"players-changed\", cb);\n    return () => socket.off(\"players-changed\", cb);\n  }\n\n  onPlayerRemoved(\n    cb: (data: { newPlayers: Player[]; removedPlayer: Player[] }) => void\n  ): () => void {\n    socket.on(\"player-removed\", cb);\n    return () => socket.off(\"player-removed\", cb);\n  }\n\n  onGameInit(cb: (data: { players: Player[] }) => void): () => void {\n    socket.on(\"init-game\", cb);\n    return () => socket.off(\"init-game\", cb);\n  }\n\n  onNextQuestion(\n    cb: (data: { question: any; player: boolean }) => void\n  ): () => void {\n    socket.on(\"next-question\", cb);\n    return () => socket.off(\"next-question\", cb);\n  }\n\n  onPlayerSurprise(cb: (data: { surprise: any }) => void): () => void {\n    socket.on(\"player-surprise\", cb);\n    return () => socket.off(\"player-surprise\", cb);\n  }\n\n  onPlayerLeft(cb: () => void): () => void {\n    socket.on(\"player-left\", cb);\n    return () => socket.off(\"player-left\", cb);\n  }\n\n  onFinishGame(cb: (winner: Player) => void): () => void {\n    socket.on(\"finished-game\", cb);\n    return () => socket.off(\"finished-game\", cb);\n  }\n\n  removeAllListeners() {\n    socket.removeAllListeners();\n  }\n\n  getPlayer(): Player {\n    if (this.player) return this.player;\n    this.player = {} as Player;\n    this.player.name = localStorage.getItem(\"playerName\") as string;\n    this.player.img = localStorage.getItem(\"playerImg\") as string;\n    return this.player;\n  }\n}\n","import { OnlineServer } from \"../Server/OnlineServer\";\nimport { ServerInterface } from \"../Server/ServerInterface\";\nimport { Player, GameServer } from \"../utils/interfaces\";\nimport { socket } from \"./socket\";\n\nexport class _API implements ServerInterface {\n  isOnline = false;\n  _server: ServerInterface;\n  player?: Player;\n\n  constructor() {\n    this._server = new OnlineServer();\n\n    socket.on(\"connect\", () => {\n      this.setOnlineMode(socket.connected);\n    });\n  }\n\n  startQuestions(): void {\n    console.log(\"emmiting start questions\");\n    this._server.startQuestions();\n  }\n\n  next(index: number): void {\n    this._server.next(index);\n  }\n\n  nextPlayer(): void {\n    this._server.nextPlayer();\n  }\n\n  onNextPlayer(cb: (data: number) => void): () => void {\n    return this._server.onNextPlayer(cb);\n  }\n\n  onQuestionAnswer(cb: (data: number) => void): () => void {\n    return this._server.onQuestionAnswer(cb);\n  }\n\n  onNextQuestion(\n    cb: (data: { question: any; player: boolean }) => void\n  ): () => void {\n    return this._server.onNextQuestion(cb);\n  }\n\n  getPlayerSurprise(): void {\n    this._server.getPlayerSurprise();\n  }\n\n  onPlayerSurprise(cb: (data: { surprise: any }) => void): () => void {\n    return this._server.onPlayerSurprise(cb);\n  }\n\n  setOnlineMode(isOnline: boolean) {\n    this.isOnline = isOnline;\n  }\n\n  playOnline() {\n    this._server = new OnlineServer();\n  }\n\n  getServers(): Promise<GameServer[]> {\n    console.log(this._server);\n\n    return this._server.getServers();\n  }\n\n  getServerPlayers(): Promise<Player[]> {\n    return this._server.getServerPlayers();\n  }\n\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\n    return this._server.createServer(serverName, serverPassword);\n  }\n\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\n    return this._server.joinServer(serverId, serverPassword);\n  }\n\n  emitReady(): void {\n    this._server.emitReady();\n  }\n\n  leaveServer(): void {\n    this._server.leaveServer();\n  }\n\n  onPlayersUpdated(\n    cb: (data: {\n      startPosition: number;\n      endPosition: number;\n      direction: number;\n      currentPlayerId: string;\n    }) => void\n  ): () => void {\n    return this._server.onPlayersUpdated(cb);\n  }\n\n  onPlayerRemoved(\n    cb: (data: { newPlayers: Player[]; removedPlayer: Player[] }) => void\n  ): () => void {\n    return this._server.onPlayerRemoved(cb);\n  }\n\n  onGameInit(cb: (data: { players: Player[] }) => void): () => void {\n    const unsub = this._server.onGameInit(cb);\n    console.log(this._server);\n    return unsub;\n  }\n\n  onPlayerLeft(cb: () => void): () => void {\n    return this._server.onPlayerLeft(cb);\n  }\n\n  onFinishGame(cb: (winner: Player) => void): () => void {\n    return this._server.onFinishGame(cb);\n  }\n\n  getPlayer(): Player {\n    return this._server.getPlayer();\n  }\n}\n\nconst API = new _API();\n\nexport default API;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport API from \"../../api/API\";\nimport { Player } from \"../../utils/interfaces\";\n\ninterface StoreState {\n  playerId: string;\n  currentPlayerId: string;\n  currentPlayer: number;\n  nextPlayre: number;\n  orderOffset: number;\n  players: Player[];\n  inGame: boolean;\n  inLobby: boolean;\n  token: string;\n\n  waitingToStartWithQuestions: boolean;\n  question: any;\n  playable: boolean;\n  points: number;\n  questionNumber: number;\n  answerIndex: number | null;\n  surprise: any;\n  removedPlayer: Player | null;\n}\n\nconst initialState = {\n  inGame: false,\n} as StoreState;\n\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    setPlayerId(state, action: PayloadAction<string>) {\n      state.playerId = action.payload;\n    },\n\n    init: (\n      state,\n      action: PayloadAction<{ players: Player[]; token: string }>\n    ) => {\n      console.log(\"init\");\n      const { players, token } = action.payload;\n      state.inGame = true;\n      state.token = token;\n      state.points = 0;\n      state.waitingToStartWithQuestions = true;\n      state.players = players;\n      state.currentPlayer = 0;\n      state.currentPlayerId = players[0].id;\n      state.answerIndex = null;\n      state.surprise = null;\n      state.removedPlayer = null;\n    },\n\n    startQuestions(state) {\n      state.waitingToStartWithQuestions = false;\n      state.questionNumber = 1;\n      if (state.playerId === state.currentPlayerId) API.startQuestions();\n    },\n\n    setQuestion(state, action: PayloadAction<{ question: any; player: any }>) {\n      state.answerIndex = null;\n      state.question = action.payload.question;\n      state.playable = action.payload.player === state.playerId;\n      state.currentPlayerId = action.payload.player;\n    },\n\n    removeQuestion(state) {\n      state.question = null;\n    },\n\n    setQuestionAnswer(state, action: PayloadAction<number>) {\n      state.answerIndex = action.payload;\n    },\n\n    answerQuestion(state, action: PayloadAction<number>) {\n      console.log(state.questionNumber);\n      API.next(action.payload);\n      state.questionNumber = state.questionNumber + 1;\n    },\n\n    setNextPlayer(state, action: PayloadAction<number>) {\n      console.log(state.currentPlayerId);\n      console.log(action.payload);\n      state.currentPlayer = action.payload;\n      state.currentPlayerId = state.players[action.payload].id;\n      state.question = null;\n      state.waitingToStartWithQuestions = true;\n      console.log(state.currentPlayerId);\n    },\n\n    moveCurrentPlayer(state, action: PayloadAction<number>) {\n      state.question = null;\n      state.players[state.currentPlayer].position =\n        (state.players[state.currentPlayer].position + action.payload) % 24;\n    },\n\n    updatePlayers(state, action: PayloadAction<Player[]>) {\n      console.log(action.payload);\n      state.question = null;\n      state.players = action.payload;\n    },\n\n    setSurprise(state, action: PayloadAction<any>) {\n      state.surprise = action.payload;\n    },\n\n    setRemovedPlayer(state, action: PayloadAction<Player>) {\n      state.removedPlayer = action.payload;\n    },\n\n    setPlayers(state, action: PayloadAction<Player[]>) {\n      state.removedPlayer = null;\n      state.players = action.payload;\n    },\n\n    stopGame(state) {\n      state.inGame = false;\n    },\n\n    setInLobby(state, action: PayloadAction<boolean>) {\n      state.inLobby = action.payload;\n    },\n  },\n});\n\nexport const {\n  init,\n  stopGame,\n  moveCurrentPlayer,\n  setInLobby,\n  setPlayerId,\n  updatePlayers,\n  setQuestion,\n  setNextPlayer,\n  startQuestions,\n  answerQuestion,\n  setQuestionAnswer,\n  setSurprise,\n  setRemovedPlayer,\n  setPlayers,\n  removeQuestion,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import styled from \"styled-components\";\n\nconst CAvatar = styled.div`\n  width: 100%;\n  min-width: 100px;\n  max-width: 120px;\n  border-radius: 50%;\n  border: ${(props) => props.border} solid\n    ${(props) => (props.color ? props.color : \"rgb(0 3 24)\")};\n  position: relative;\n  padding-top: 100%;\n  box-shadow: 0px 0px 6px 3px rgb(23 25 41);\n  box-sizing: content-box;\n  ${(props) => (props.removed ? \"filter: grayscale(1)\" : \"\")};\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border-radius: 50%;\n\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nconst Avatar = ({ seed, color, border = \"1px\", removed }) => {\n  return (\n    <CAvatar color={color} border={border} removed={removed}>\n      <img src={`https://avatars.dicebear.com/api/male/${seed}.svg`} alt=\"\" />\n    </CAvatar>\n  );\n};\n\nexport default Avatar;\n","import styled from \"styled-components\";\nimport { Button as MuiButton } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\n\nconst CButton = styled(MuiButton)`\n  &.MuiButton-root {\n    padding: 16px 36px;\n    text-transform: capitalize;\n    background-color: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgb(2 15 108);\n    border-radius: 12px;\n    text-align: center;\n    color: white;\n    transition: transform 0.1s ease-in-out;\n    transition-timing-function: ease-out;\n    margin: 0;\n    display: inline-flex;\n    flex-direction: column;\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n\n    :hover {\n      cursor: pointer;\n      transform: scale(1.05);\n      transition-timing-function: ease-in;\n      background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    :active {\n      transform: scale(0.96);\n      transition-duration: 0.05s;\n    }\n  }\n`;\n\nconst Button = ({ children, href, ...props }) => {\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    if (props.onClick) props.onClick();\n    if (href && !props.disabled) navigate(href);\n  };\n\n  return (\n    <CButton {...props} onClick={onClick}>\n      {children}\n    </CButton>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport Avatar from \"../../Shared/Avatar/Avatar\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Button from \"../../Shared/Button/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 40px 70px;\n  border-radius: 12px;\n  font-size: 2rem;\n  .row {\n    &.me {\n      color: yellow;\n\n      animation: pulse 1s infinite;\n    }\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n\n    .order {\n      width: 50px;\n      font-size: 1.5rem;\n    }\n  }\n\n  @keyframes pulse {\n    50% {\n      transform: scale(1.05);\n    }\n  }\n`;\n\nexport default function Scoreboard({ winner }) {\n  // const playerId = useSelector((state) => state.game.playerId);\n\n  return (\n    <Root>\n      <Typography variant=\"h2\" textAlign=\"center\" fontWeight={600} mb={6}>\n        The winner is\n      </Typography>\n        <div className={`row`} key={winner.id}>\n          <div className=\"img\">\n            <Avatar seed={`${winner.name}${winner.img}`} />{\" \"}\n          </div>\n          <div className=\"name\">{winner.name}</div>\n        </div>\n\n      <Grid container justifyContent=\"center\" mt={6}>\n        <Link to=\"/main-menu\">\n          <Button onClick={() => {}}>Play Again</Button>\n        </Link>\n      </Grid>\n    </Root>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport \"./Question.css\";\nimport { answerQuestion } from \"../../../stores/features/gameSlice\";\n\nconst Root = styled.div`\n  border-radius: 1rem;\n  box-shadow: 1px 3px 18px rgb(0 6 50);\n  position: absolute;\n  top: 35%;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 60%;\n  padding: 25px 40px;\n  background: #253174;\n  color: white;\n  pointer-events: ${(props) => (props.player ? \"auto\" : \"none\")};\n`;\n\nconst Question = () => {\n  const dispatch = useDispatch();\n  const q = useSelector((state) => state.game.question);\n  const currentPlayerId = useSelector((state) => state.game.currentPlayerId);\n  const playerId = useSelector((state) => state.game.playerId);\n  const waitingToStartWithQuestions = useSelector(\n    (state) => state.game.waitingToStartWithQuestions\n  );\n\n  const answerIndex = useSelector((state) => state.game.answerIndex);\n\n  const onClick = (index) => {\n    dispatch(answerQuestion(index));\n  };\n  return q && !waitingToStartWithQuestions ? (\n    <Root player={currentPlayerId === playerId}>\n      <header>\n        {/* <Timer duration={duration} timeoutFn={this.checkAnswer(null, correctAnswer)} stopTimer={this.state.stopTimer} /> */}\n      </header>\n      <p>{decodeURIComponent(q.question)}</p>\n      <footer>\n        {q.answers?.map((answer, i) => {\n          return (\n            <div key={answer} className=\"answer-wrapper\">\n              <button\n                className={`button question ${\n                  answerIndex !== null && i === answerIndex ? \"answered\" : \"\"\n                }`}\n                onClick={() => onClick(i)}\n              >\n                {decodeURIComponent(answer)}\n              </button>\n            </div>\n          );\n        })}\n      </footer>\n    </Root>\n  ) : null;\n};\n\nexport default Question;\n","import styled from \"styled-components\";\nimport { Typography as MuiTypography } from \"@mui/material\";\n\nconst Ctypography = styled(MuiTypography)`\n  color: white;\n  font-weight: bold;\n`;\n\nconst Typography = (props) => {\n  return <Ctypography {...props} />;\n};\n\nexport default Typography;\n","import styled from \"styled-components\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport Avatar from \"../../Shared/Avatar/Avatar\";\nimport Typography from \"../../Shared/Typography/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\n\nconst Root = styled.div`\n  width: 100%;\n  padding: 25px;\n`;\n\nexport default function PlayersStack() {\n  const players = useSelector((state) => state.game.players);\n  const currentPlayerId = useSelector((state) => state.game.currentPlayerId);\n\n  return (\n    <Root>\n      <Grid\n        item\n        container\n        flexWrap=\"nowrap\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={0.5}\n        gap={6}\n        xs={12}\n      >\n        {players.map((player) => {\n          return (\n            <Stack\n              key={player.id}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              spacing={1}\n            >\n              <Avatar\n                removed={player.removed}\n                seed={`${player.name}${player.img}`}\n                color={player.color}\n                border={currentPlayerId === player.id ? \"5px\" : \"1px\"}\n              />\n              <Typography>\n                {player.name}\n              </Typography>\n            </Stack>\n          );\n        })}\n      </Grid>\n    </Root>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { startQuestions } from \"../../../stores/features/gameSlice\";\n\nconst Root = styled.div`\n  position: absolute;\n  top: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 80%;\n`;\n\nconst PlayerReady = () => {\n  const dispatch = useDispatch();\n  const interval = useRef();\n  const currentPlayerId = useSelector((state) => state.game.currentPlayerId);\n  const playerId = useSelector((state) => state.game.playerId);\n  const players = useSelector((state) => state.game.players);\n  const waitingToStartWithQuestions = useSelector(\n    (state) => state.game.waitingToStartWithQuestions\n  );\n\n  const [seconds, setSeconds] = useState(3);\n\n  useEffect(() => {\n    if (waitingToStartWithQuestions) {\n      interval.current = setInterval(() => {\n        setSeconds((seconds) => seconds - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [waitingToStartWithQuestions]);\n\n  useEffect(() => {\n    if (seconds < 1) {\n      clearInterval(interval.current);\n      setSeconds(3);\n      console.log(\"gotovo je sad dovuci pitanje jedno po jedno\");\n      dispatch(startQuestions());\n    }\n  }, [seconds, dispatch]);\n\n  const playerName = players.filter((el) => el.id === currentPlayerId)[0]?.name;\n\n  return waitingToStartWithQuestions ? (\n    <Root player={currentPlayerId === playerId}>\n      <p>\n        Player {playerName} is starting in {seconds}\n      </p>\n    </Root>\n  ) : null;\n};\n\nexport default PlayerReady;\n","import { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  position: relative;\n  margin: auto;\n  height: 28.7rem;\n  width: 28.7rem;\n`;\n\nconst Tile = styled.div`\n  border: 3px solid #222d69;\n  position: absolute;\n  top: ${(props) => props.topPos * 4.1}rem;\n  left: ${(props) => props.leftPos * 4.1}rem;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 10px;\n`;\n\nconst Player = styled.div`\n  box-shadow: 1px 3px 10px rgb(0 6 50);\n  //   background-color: ${(props) => props.color};\n  position: absolute;\n  top: ${(props) => props.topPos * 4.1 + 0.5}rem;\n  left: ${(props) => props.leftPos * 4.1 + 0.5}rem;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  background: radial-gradient(\n    ${(props) => props.color},\n    ${(props) => props.color},\n    black\n  );\n`;\n\nconst Board = () => {\n  const players = useSelector((state) => state.game.players);\n\n  return (\n    <Root>\n      {[...Array(24)].map((el, i) => {\n        if (i < 6) return <Tile topPos={0} leftPos={i % 6}></Tile>;\n        else if (i >= 6 && i < 12)\n          return <Tile topPos={i % 6} leftPos={6}></Tile>;\n        else if (i >= 12 && i < 18)\n          return <Tile topPos={6} leftPos={6 - (i % 6)}></Tile>;\n        else return <Tile topPos={6 - (i % 6)} leftPos={0}></Tile>;\n      })}\n      {players.map((player) => {\n        if (player.removed) return null;\n        if (player.position < 6)\n          return (\n            <Player\n              color={player.color}\n              topPos={0}\n              leftPos={player.position % 6}\n            ></Player>\n          );\n        else if (player.position >= 6 && player.position < 12)\n          return (\n            <Player\n              color={player.color}\n              topPos={player.position % 6}\n              leftPos={6}\n            ></Player>\n          );\n        else if (player.position >= 12 && player.position < 18)\n          return (\n            <Player\n              color={player.color}\n              topPos={6}\n              leftPos={6 - (player.position % 6)}\n            ></Player>\n          );\n        else\n          return (\n            <Player\n              color={player.color}\n              topPos={6 - (player.position % 6)}\n              leftPos={0}\n            ></Player>\n          );\n      })}\n    </Root>\n  );\n};\n\nexport default Board;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { setSurprise } from \"../../../stores/features/gameSlice\";\n\nconst Root = styled.div`\n  border-radius: 1rem;\n  box-shadow: 1px 3px 18px rgb(0 6 50);\n  position: absolute;\n  top: 35%;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 60%;\n  padding: 25px 40px;\n  background: #253174;\n  color: white;\n`;\n\nconst Surprise = () => {\n  const dispatch = useDispatch();\n  const surprise = useSelector((state) => state.game.surprise);\n  //   const currentPlayerId = useSelector((state) => state.game.currentPlayerId);\n  //   const playerId = useSelector((state) => state.game.playerId);\n\n  useEffect(() => {\n    if (surprise) {\n      setTimeout(() => {\n        dispatch(setSurprise(null));\n      }, 3000);\n    }\n  }, [surprise, dispatch]);\n\n  return surprise ? (\n    <Root>\n      <header>\n        {/* <Timer duration={duration} timeoutFn={this.checkAnswer(null, correctAnswer)} stopTimer={this.state.stopTimer} /> */}\n      </header>\n      <p>{surprise.message}</p>\n    </Root>\n  ) : null;\n};\n\nexport default Surprise;\n","import { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  border-radius: 1rem;\n  box-shadow: 1px 3px 18px rgb(0 6 50);\n  position: absolute;\n  top: 35%;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 60%;\n  padding: 25px 40px;\n  background: #253174;\n  color: white;\n`;\n\nconst RemovedPlayer = () => {\n  const removedPlayer = useSelector((state) => state.game.removedPlayer);\n\n  return removedPlayer ? (\n    <Root>\n      <header>\n        {/* <Timer duration={duration} timeoutFn={this.checkAnswer(null, correctAnswer)} stopTimer={this.state.stopTimer} /> */}\n      </header>\n      <p>Player has been removed</p>\n    </Root>\n  ) : null;\n};\n\nexport default RemovedPlayer;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\nimport {\n  stopGame,\n  setQuestion,\n  setNextPlayer,\n  setQuestionAnswer,\n  moveCurrentPlayer,\n  setSurprise,\n  setRemovedPlayer,\n  setPlayers,\n  removeQuestion,\n} from \"../../stores/features/gameSlice\";\nimport Scoreboard from \"./Scoreboard/Scoreboard.jsx\";\nimport { Player } from \"../../utils/interfaces.js\";\nimport API from \"../../api/API\";\nimport { Navigate } from \"react-router\";\nimport Question from \"./Question/Question.jsx\";\nimport PlayersStack from \"./PlayersStack/PlayerStack.jsx\";\nimport PlayerReady from \"./PlayerReady/PlayerReady.jsx\";\nimport Board from \"./Board/Board.jsx\";\nimport Surprise from \"./Surprise/Surprise\";\nimport RemovedPlayer from \"./RemovedPlayer/RemovedPlayer\";\n\nexport default function Game() {\n  const dispatch = useDispatch();\n  const [finished, setFinished] = useState(false);\n  const [winner, setWinner] = useState<Player | null>(null);\n  const inGame = useSelector((state) => state.game.inGame);\n  const playerId = useSelector((state) => state.game.playerId);\n\n  const movePlayer = (\n    startPosition: number,\n    endPosition: number,\n    direction: number,\n    currentPlayerId: string\n  ) => {\n    if (startPosition !== endPosition) {\n      dispatch(moveCurrentPlayer(direction));\n      setTimeout(() => {\n        movePlayer(\n          (startPosition + direction) % 24,\n          endPosition,\n          direction,\n          currentPlayerId\n        );\n      }, 1000);\n    } else {\n      if (playerId === currentPlayerId) API.getPlayerSurprise();\n    }\n  };\n\n  useEffect(() => {\n    const timeoutReady = setTimeout(() => {\n      API.emitReady();\n    }, 0);\n\n    API.onQuestionAnswer((answerIndex) => {\n      dispatch(setQuestionAnswer(answerIndex));\n    });\n\n    API.onPlayersUpdated(\n      ({ startPosition, endPosition, direction, currentPlayerId }) => {\n        dispatch(removeQuestion());\n        movePlayer(startPosition, endPosition, direction, currentPlayerId);\n      }\n    );\n\n    API.onNextQuestion(({ question, player }) => {\n      console.log(question);\n      dispatch(\n        setQuestion({\n          question,\n          player,\n        })\n      );\n    });\n\n    API.onPlayerRemoved(({ newPlayers, removedPlayer }) => {\n      console.log(newPlayers, removedPlayer);\n      dispatch(setRemovedPlayer(removedPlayer[0]));\n\n      setTimeout(() => {\n        dispatch(setPlayers(newPlayers));\n      }, 3000);\n    });\n\n    API.onPlayerSurprise(({ surprise }) => {\n      dispatch(setSurprise(surprise));\n    });\n\n    API.onNextPlayer((nextPlayer) => {\n      console.log(\"next player\");\n      dispatch(setNextPlayer(nextPlayer));\n    });\n\n    API.onFinishGame((winnerPlayer) => {\n      console.log(winner)\n      setWinner(winnerPlayer);\n      setFinished(true);\n    });\n\n    return () => {\n      API.leaveServer();\n      dispatch(stopGame());\n      clearTimeout(timeoutReady);\n    };\n  }, [dispatch]);\n\n  if (!inGame) return <Navigate replace to=\"/main-menu\" />;\n\n  return (\n    <div>\n      <PlayerReady />\n      <PlayersStack />\n      <Board />\n      <Question />\n      <Surprise />\n      <RemovedPlayer />\n      {finished && <Scoreboard winner={winner} />}\n    </div>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nconst Paper = styled.div`\n  background: var(--panel-bg);\n  margin: 20vh 5vw;\n  padding: 75px 42px 64px;\n  text-align: center;\n  min-height: 60vh;\n  border-radius: 1rem;\n  box-shadow: 1px 3px 18px rgb(0 6 50);\n  position: relative;\n\n  .logo {\n    width: 150px;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n`;\n\nconst APaper = ({ children, ...props }) => {\n  return (\n    <Grid\n      as={motion.div}\n      initial={{ opacity: 0, x: 500 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -500 }}\n      transition={{ duration: 0.7 }}\n      container\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      {...props}\n    >\n      <Grid item xs={12} md={10} lg={8}>\n        <Paper>\n          <img className=\"logo\" src=\"assets/images/logo512.png\" alt=\"\" />\n          {children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default APaper;\n","import styled from \"styled-components\";\n\nconst CTextField = styled.input`\n  display: inline-block;\n  width: 75%;\n  height: 30%;\n  padding: 22px 32px;\n  background-color: rgba(0, 0, 0, 0.3);\n  border: 1px solid rgb(2 15 108);\n  border-radius: 10px;\n  text-align: center;\n  font-size: large;\n  color: var(--secondary);\n  box-shadow: inset 1px 3px 10px #1a1b35;\n\n  ::placeholder {\n    color: #fff;\n    opacity: 1;\n  }\n  :focus {\n    outline: 2px solid var(--secondary);\n    outline-offset: 2px;\n  }\n`;\nconst TextField = (props) => {\n  return <CTextField {...props} />;\n};\n\nexport default TextField;\n","const ReChoiceIcon = () => {\n  return (\n    <svg\n      style={{ width: \"60%\", filter: \"drop-shadow(0 0 3px white)\" }}\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"arrow-rotate-left\"\n      class=\"svg-inline--fa fa-arrow-rotate-left\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M480 256c0 123.4-100.5 223.9-223.9 223.9c-48.86 0-95.19-15.58-134.2-44.86c-14.14-10.59-17-30.66-6.391-44.81c10.61-14.09 30.69-16.97 44.8-6.375c27.84 20.91 61 31.94 95.89 31.94C344.3 415.8 416 344.1 416 256s-71.67-159.8-159.8-159.8C205.9 96.22 158.6 120.3 128.6 160H192c17.67 0 32 14.31 32 32S209.7 224 192 224H48c-17.67 0-32-14.31-32-32V48c0-17.69 14.33-32 32-32s32 14.31 32 32v70.23C122.1 64.58 186.1 32.11 256.1 32.11C379.5 32.11 480 132.6 480 256z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default ReChoiceIcon;\n","import { useEffect, useState } from \"react\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Avatar from \"../Shared/Avatar/Avatar\";\nimport Button from \"../Shared/Button/Button\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport ReChoiceIcon from \"./ReChoiceIcon\";\n\nconst CreateUser = () => {\n  const getLocalStorageName = () => {\n    if (localStorage.getItem(\"playerName\"))\n      return localStorage.getItem(\"playerName\");\n    else return \"\";\n  };\n  const getLocalStorageImg = () => {\n    if (localStorage.getItem(\"playerImg\"))\n      return JSON.parse(localStorage.getItem(\"playerImg\"));\n    else return Math.random() * 100;\n  };\n  const [playerName, setPlayerName] = useState(getLocalStorageName);\n  const [imgSeed, setImgSeed] = useState(getLocalStorageImg);\n\n  useEffect(() => {\n    localStorage.setItem(\"playerName\", playerName);\n    localStorage.setItem(\"playerImg\", imgSeed);\n  }, [playerName, imgSeed]);\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" spacing={2}>\n        <Grid item xs={10}>\n          <Typography>Enter Your Name</Typography>\n        </Grid>\n        <Grid item xs={10} md={6}>\n          <TextField\n            type=\"text\"\n            placeholder=\"\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n            pad\n          />\n        </Grid>\n\n        <Grid\n          item\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={4}\n          xs={10}\n        >\n          <Grid item sx={11}>\n            <Avatar seed={`${playerName}${imgSeed}`} />\n          </Grid>\n          <Grid item xs={1}>\n            <Button\n              onClick={() => setImgSeed((seed) => seed + 1)}\n              style={{\n                width: \"4vw\",\n                height: \"4vw\",\n                padding: \"35%\",\n              }}\n            >\n              <ReChoiceIcon />\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={10}>\n          {playerName && imgSeed && (\n            <Button href=\"/main-menu\">\n              <Typography> Save & Go </Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateUser;\n","import Grid from \"@mui/material/Grid\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Button from \"../Shared/Button/Button\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../api/API\";\n\nconst style = {\n  color: \"#fff\",\n};\n\nconst MainMenu = () => {\n  const onPlayOnline = () => {\n    API.playOnline(true);\n  };\n\n  return (\n    <Paper key=\"main-menu\">\n      <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={4}>\n        <Grid item xs={10}>\n          <Typography fontSize={22}>Start Playing</Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          spacing={2}\n          sx={12}\n        >\n          <Grid item xs={12} md={5}>\n            <Button\n              disabled={!API.isOnline}\n              style={{ width: \"80%\" }}\n              href=\"/create-server\"\n              onClick={onPlayOnline}\n            >\n              <img src=\"assets/icons/add.svg\" alt=\"\" />\n              <Typography>Create A Game</Typography>\n            </Button>\n          </Grid>\n          <Grid item sx={{ display: { xs: \"none\", md: \"initial\" } }} md={2}>\n            <Typography>OR</Typography>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Button\n              disabled={!API.isOnline}\n              style={{ width: \"80%\" }}\n              href=\"/join-server\"\n              onClick={onPlayOnline}\n            >\n              <img src=\"assets/icons/glob.svg\" alt=\"\" />\n              <Typography>Join A Game</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item container alignItems=\"center\" justifyContent=\"center\" mt={6}>\n          <Grid item xs={6}>\n            <Link style={style} to=\"/create-user\">\n              Profile Setting\n            </Link>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default MainMenu;\n","import { styled } from \"@mui/system\";\nimport SwitchUnstyled, {\n  switchUnstyledClasses,\n} from \"@mui/core/SwitchUnstyled\";\n\nconst Root = styled(\"span\")`\n  font-size: 0;\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 18px;\n  cursor: pointer;\n  border: 2px solid rgb(2 15 108);\n  outline: 1px solid #f3f2f1;\n  box-shadow: 0px 0px 6px 3px rgb(2 15 108);\n  border-radius: 2rem;\n\n  & .${switchUnstyledClasses.track} {\n    background: #f7f7f7;\n    border-radius: 10px;\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  & .${switchUnstyledClasses.thumb} {\n    display: block;\n    width: 14px;\n    height: 14px;\n    left: 27px;\n    top: 0px;\n    border-radius: 16px;\n    box-shadow: 0 0 3px 0 #ffb100;\n    background-color: rgb(2 15 108);\n    position: relative;\n    transition: all 200ms ease;\n  }\n\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\n    background-color: rgba(255, 255, 255, 1);\n    box-shadow: 0 0 1px 8px rgba(0, 0, 0, 0.25);\n  }\n\n  &.${switchUnstyledClasses.checked} {\n    .${switchUnstyledClasses.thumb} {\n      left: 2px;\n      top: 0px;\n      box-shadow: 0 0 3px 0 #ffb100;\n      background-color: rgb(2 15 108);\n    }\n\n    .${switchUnstyledClasses.track} {\n      background: #f7f7f7;\n    }\n  }\n\n  & .${switchUnstyledClasses.input} {\n    cursor: inherit;\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    z-index: 1;\n    margin: 0;\n  }\n`;\n\nconst UnstyledSwitches = (props) => {\n  const label = { componentsProps: { input: { \"aria-label\": \"switch\" } } };\n\n  return (\n    <SwitchUnstyled component={Root} {...label} {...props} defaultChecked />\n  );\n};\n\nexport default UnstyledSwitches;\n","import { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Button from \"../Shared/Button/Button\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Switch from \"../Shared/Switch/Switch\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../api/API.ts\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\n\nconst CreateServer = () => {\n  const [serverName, setServerName] = useState(\"\");\n  const [serverPassword, setServerPassword] = useState(\"\");\n  const [isPrivate, setIsPrivate] = useState(true);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleCreateServer = async () => {\n    const playerId = await API.createServer(serverName, serverPassword);\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} md={10}>\n          <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\n            <Typography>Choose A Server Name</Typography>\n\n            <TextField\n              label=\"server-name\"\n              value={serverName}\n              onChange={(e) => setServerName(e.target.value)}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={10} sm={8} md={6} lg={5} marginTop={2}>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            gap=\"32px\"\n          >\n            <p\n              style={{\n                color: `${isPrivate ? \"white\" : \"gray\"}`,\n                textShadow: `${isPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Private\n            </p>\n            <Switch\n              onChange={() => {\n                setIsPrivate(!isPrivate);\n                setServerPassword(\"\");\n              }}\n            />\n            <p\n              style={{\n                color: `${!isPrivate ? \"white\" : \"gray\"}`,\n                textShadow: `${!isPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Public\n            </p>\n          </Stack>\n        </Grid>\n        {isPrivate && (\n          <Grid item xs={12} md={10} marginTop={2}>\n            <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\n              <Typography>Server Password</Typography>\n\n              <TextField\n                type=\"password\"\n                label=\"server-password\"\n                value={serverPassword}\n                onChange={(e) => setServerPassword(e.target.value)}\n              />\n            </Stack>\n          </Grid>\n        )}\n\n        <Grid item xs={12} md={10} lg={8}>\n          {((isPrivate && serverName && serverPassword) ||\n            (!isPrivate && serverName)) && (\n            <Button onClick={handleCreateServer}>Creat Server</Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateServer;\n","import styled from \"styled-components\";\n\nconst TableContainer = styled.div`\n  min-height: 35vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-radius: 1rem;\n\n  color: white;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 60px;\n  max-height: 500px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    background-color: #07caea;\n    border-radius: 0 1rem 1rem 0;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 1rem;\n    background-color: #0109f9;\n    border: 2px solid #07caea;\n  }\n  ::-webkit-scrollbar-track-piece {\n  }\n`;\n\nconst TableHead = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 20px;\n`;\n\nconst TableCell = styled.p`\n  border-bottom: 1px solid rgb(2 15 108);\n  color: #fff;\n`;\n\nconst TableBody = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: minmax(min-content, max-content);\n  padding: 0 20px 20px;\n`;\n\nconst Table = ({ children }) => {\n  return (\n    <TableContainer>\n      <TableHead>\n        <TableCell>Server Name</TableCell>\n        <TableCell>Players Joined</TableCell>\n        <TableCell>Is Private</TableCell>\n      </TableHead>\n      <TableBody>{children}</TableBody>\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Table from \"../Shared/Table/Table\";\nimport Button from \"../Shared/Button/Button\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\nimport API from \"../../api/API\";\n\nconst CTableRow = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  // display: grid;\n  // grid-template-columns: repeat(3, 1fr);\n  border-radius: 2rem;\n  height: 45px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst CTableCell = styled.p`\n  height: 30px;\n  width: calc(100% / 3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst JoinServer = () => {\n  const [showPrivate, setShowPrivate] = useState(true);\n  const [selectedServer, setSelectedServer] = useState(null);\n\n  const [password, setPassword] = useState(null); //for show button\n  const [selectOne, setSelectOne] = useState(false); //for show button\n\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [servers, setServers] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    API.playOnline(true);\n    (async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    })();\n    const interval = setInterval(async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleJoinServer = async () => {\n    const serverId = servers[selectedServer].id;\n    const playerId = await API.joinServer(serverId, password);\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n        <Grid item xs={12}>\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n            spacing={2}\n          >\n            <p\n              style={{\n                color: `${showPrivate ? \" white\" : \"gray\"}`,\n                textShadow: `${showPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Show Private Servers\n            </p>\n            <Checkbox\n              defaultChecked\n              color=\"info\"\n              onChange={() => {\n                setShowPrivate(!showPrivate);\n                setSelectedServer(null);\n                setSelectOne(false);\n              }}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <Table>\n            {servers.map((server, index) => {\n              console.log(server);\n              return (\n                <CTableRow\n                  key={index}\n                  onClick={() => {\n                    setSelectedServer(index);\n                    setSelectOne(true);\n                    setPassword(\"\");\n                    if (server.isPrivate) setIsPrivate(true);\n                    else setIsPrivate(false);\n                  }}\n                  style={\n                    index === selectedServer && server.isPrivate\n                      ? {\n                          backgroundColor: \"rgba(0,0,0,.5)\",\n                          border: \" 1px solid #fb0303\",\n                          borderWidth: \"0 0 3px 2px\",\n                          borderRadius: \"1rem\",\n                          boxShadow: \"inset 1px 0 5px 1px black\",\n                        }\n                      : index === selectedServer\n                      ? {\n                          backgroundColor: \"rgba(0,0,0,.5)\",\n                          borderRadius: \"1rem\",\n                        }\n                      : {}\n                  }\n                >\n                  {index === selectedServer && server.isPrivate ? (\n                    <>\n                      <CTableCell>{server.serverName}</CTableCell>\n                      <TextField\n                        type=\"password\"\n                        placeholder=\"Enter the server password\"\n                        style={{\n                          height: \"100%\",\n                          border: \"none\",\n                          background: \"none\",\n                          boxShadow: \"none\",\n                        }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <CTableCell>{server.name}</CTableCell>\n                      <CTableCell>{server.cntPlayers}</CTableCell>\n                      <CTableCell>{server.isPrivate ? \"Yes\" : \"\"}</CTableCell>\n                    </>\n                  )}\n                </CTableRow>\n              );\n            })}\n          </Table>\n        </Grid>\n        <Grid item xs={12}>\n          {((selectOne && isPrivate && password) ||\n            (selectOne && !isPrivate)) && (\n            <Button onClick={handleJoinServer}>\n              <Typography>Join Game</Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default JoinServer;\n","import styled from \"styled-components\";\n\nconst CLoading = styled.span`\n  display: inline-block;\n  position: relative;\n  span {\n    animation: loading 1.2s ease-in-out infinite;\n    position: absolute;\n    width: 2px;\n    background-color: white;\n    box-shadow: 0 0 2px white;\n  }\n\n  span:nth-child(1) {\n    left: 5px;\n    animation-delay: -0.24s;\n    display: inline-block;\n  }\n\n  span:nth-child(2) {\n    left: 10px;\n    animation-delay: -0.12s;\n    display: inline-block;\n  }\n  span:nth-child(3) {\n    left: 15px;\n    animation-delay: 0s;\n    display: inline-block;\n  }\n  @keyframes loading {\n    0% {\n      top: -1px;\n      height: 1px;\n    }\n    50%,\n    100% {\n      top: -2px;\n      height: 2px;\n    }\n  }\n`;\n\nconst Loding = () => {\n  return (\n    <CLoading>\n      <span></span>\n      <span></span>\n      <span></span>\n    </CLoading>\n  );\n};\n\nexport default Loding;\n","import { useEffect, useState } from \"react\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Avatar from \"../Shared/Avatar/Avatar\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Loding from \"./Loding\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\nimport { init, setInLobby } from \"../../stores/features/gameSlice\";\nimport { useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport API from \"../../api/API\";\n\nconst Span = styled.span`\n  color: #f37006;\n  text-shadow: 0 0 4px #f37006;\n  font-weight: bold;\n  font-size: larger;\n`;\n\nconst Lobby = () => {\n  const [players, setPlayers] = useState([]);\n\n  const inLobby = useSelector((state) => state.game.inLobby);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!inLobby) return;\n\n    let timeout = null;\n    let unsubInit = null;\n    (async () => {\n      const serverPlayers = await API.getServerPlayers();\n      setPlayers(serverPlayers);\n      API.onPlayersUpdated((players) => setPlayers(players));\n      unsubInit = API.onGameInit(({ players, token }) => {\n        dispatch(init({ players, token }));\n        timeout = setTimeout(() => navigate(\"/game\"), 2000);\n      });\n    })();\n\n    return () => {\n      if (timeout) clearTimeout(timeout);\n      if (unsubInit) unsubInit();\n      dispatch(setInLobby(false));\n    };\n  }, [dispatch, navigate, inLobby]);\n\n  if (location.pathname === \"/waiting-lobby\" && !inLobby)\n    return <Navigate replace to=\"/main-menu\" />;\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={8}>\n          <Typography>\n            Waiting for Other Players To Join\n            <Loding />\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography>\n            Joined ( <Span>{players.length}</Span>/4 )\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          flexWrap=\"nowrap\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          spacing={0.5}\n          gap={6}\n          xs={12}\n        >\n          {players.map((player) => {\n            return (\n              <Stack\n                key={player.id}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Avatar seed={`${player.name}${player.img}`} />\n                <Typography>{player.name}</Typography>\n              </Stack>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Lobby;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport gameSlice from \"./features/gameSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import { Typography } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n\n  .img {\n    width: 80%;\n    max-width: 500px;\n\n    img {\n      width: 100%;\n    }\n  }\n\n  .text {\n    text-shadow: 1px 3px 16px black;\n  }\n`;\n\nconst StartPage = () => {\n  const [mounted, setMounted] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (localStorage.getItem(\"playerName\")) navigate(\"/main-menu\");\n      else navigate(\"/create-user\");\n    }, 3000);\n  }, [navigate]);\n\n  return (\n    <Root\n      as={motion.div}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -500 }}\n      transition={{ duration: 0.7 }}\n    >\n      <motion.div\n        initial={{ y: \"-100%\", opacity: 0 }}\n        animate={{\n          opacity: 1,\n          y: 0,\n          transition: { type: \"spring\", stiffness: 100, duration: 1 },\n        }}\n        className=\"img\"\n      >\n        <img src=\"assets/images/logo512.png\" alt=\"logo\" />\n      </motion.div>\n      <Typography\n        variant=\"h4\"\n        mt={8}\n        className=\"text\"\n        component={motion.h3}\n        initial={{\n          opacity: 0,\n          y: 100,\n        }}\n        animate={\n          mounted\n            ? {\n                opacity: 1,\n                y: [0, -10, 0],\n                transition: {\n                  repeat: Infinity,\n                  duration: 0.9,\n                  times: [0.4, 0.6, 1],\n                  ease: \"easeInOut\",\n                },\n              }\n            : {\n                opacity: 1,\n                y: 0,\n                transition: {\n                  type: \"spring\",\n                  stiffness: 100,\n                  duration: 1,\n                  delay: 1,\n                },\n              }\n        }\n        onAnimationComplete={() => setMounted(true)}\n      >\n        Welcome to Catch me if you can Quiz!\n      </Typography>\n    </Root>\n  );\n};\n\nexport default StartPage;\n","class _GameAudio {\n  musicVolume = 1;\n  effectsVolume = 1;\n  audioTracks = {};\n  musicPlaying;\n\n  preload(audioTracks, onload) {\n    this.audioTracks = audioTracks;\n    for (const url of Object.values(this.audioTracks)) {\n      var audio = new Audio();\n      audio.addEventListener(\n        \"canplaythrough\",\n        () => {\n          onload();\n        },\n        false\n      );\n      audio.src = url;\n    }\n  }\n\n  playMusic(name) {\n    if (!this.audioTracks[name])\n      throw new Error(\"No Audio Track with this name\");\n\n    if (this.musicPlaying) return;\n    this.musicPlaying = new Audio(this.audioTracks[name]);\n    this.musicPlaying.volume = this.musicVolume * 0.5;\n    this.musicPlaying.play();\n    this.musicPlaying.loop = true;\n  }\n\n  playAudio(name, reps = 1) {\n    if (!this.audioTracks[name])\n      throw new Error(\"No Audio Track with this name\");\n\n    for (let i = 0; i < reps; i++) {\n      setTimeout(() => {\n        let audio = new Audio(this.audioTracks[name]);\n        audio.volume = this.effectsVolume;\n        audio.play();\n      }, 200 * i);\n    }\n  }\n\n  changeMusicVolume(newVolume) {\n    this.musicVolume = newVolume;\n  }\n\n  changeEffectsVolume(newVolume) {\n    this.effectsVolume = newVolume;\n  }\n}\n\nconst GameAudio = new _GameAudio();\n\nexport default GameAudio;\n","export class EventsObject {\n  events = {};\n\n  addEventListener = function (name, handler) {\n    if (this.events.hasOwnProperty(name)) this.events[name].push(handler);\n    else this.events[name] = [handler];\n  };\n\n  removeEventListener = function (name, handler) {\n    /* This is a bit tricky, because how would you identify functions?\n           This simple solution should work if you pass THE SAME handler. */\n    if (!this.events.hasOwnProperty(name)) return;\n\n    var index = this.events[name].indexOf(handler);\n    if (index !== -1) this.events[name].splice(index, 1);\n  };\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  fireEvent(name, ...args) {\n    if (!this.events.hasOwnProperty(name)) return;\n\n    if (!args) args = [];\n\n    var evs = this.events[name],\n      l = evs.length;\n\n    for (var i = 0; i < l; i++) {\n      evs[i](...args);\n    }\n  }\n}\n","import GameAudio from \"./audio\";\nimport { EventsObject } from \"./EventsObject\";\n\nclass _Loader extends EventsObject {\n  imgs = [\n    \"assets/images/logo512.png\",\n  ];\n  \n  audios = {\n    music: \"assets/audio/bg-music.mp3\",\n    shuffle: \"assets/audio/shuffle.mp3\",\n    play: \"assets/audio/play.mp3\",\n    draw: \"assets/audio/draw.mp3\",\n  };\n\n  totalCnt = 0;\n  loadedCnt = 0;\n\n  constructor() {\n    super();\n    this.onProgress = this.onProgress.bind(this);\n  }\n\n  load() {\n    this.totalCnt = this.imgs.length + Object.keys(this.audios).length;\n    this.loadedCnt = 0;\n\n    GameAudio.preload(this.audios, this.onProgress);\n\n    for (const img of this.imgs) {\n      this.preloadImage(img);\n    }\n  }\n\n  preloadImage(url: string) {\n    try {\n      var _img = new Image();\n      _img.src = url;\n      _img.onload = this.onProgress;\n    } catch (e) {\n      console.error(\"Failed Loading Images\");\n      console.error(e);\n    }\n  }\n\n  onProgress() {\n    this.loadedCnt++;\n    this.fireEvent(\"progress\", this.loadedCnt / this.totalCnt);\n    if (this.loadedCnt === this.totalCnt) this.fireEvent(\"completed\");\n  }\n}\n\nconst Loader = new _Loader();\nexport default Loader;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../../utils/loader\";\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: black;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 36px;\n    font-size: 10vmin;\n  }\n\n  p {\n    font-size: 5vmin;\n    text-shadow: 0 0 10px white;\n    animation: animateText 2s infinite ease-in-out;\n  }\n\n  @keyframes animateText {\n    50% {\n      text-shadow: 0 0 15px white;\n      transform: scale(1.05);\n    }\n  }\n`;\n\nconst Loading = ({ onLoaded }) => {\n  const [percentage, setPercentage] = useState(3);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    Loader.load();\n    Loader.addEventListener(\"progress\", (value) => {\n      setPercentage(Math.round(100 * value));\n    });\n\n    Loader.addEventListener(\"completed\", () => {\n      setCompleted(true);\n    });\n  }, []);\n\n  const onClick = () => {\n    if (completed) {\n      onLoaded();\n    }\n  };\n\n  return (\n    <Root onClick={onClick}>\n      {completed ? (\n        <>\n          <h2>Ready!!</h2>\n          <p>Click Anywhere to Start</p>\n        </>\n      ) : (\n        <>\n          <h2>Loading Game Assets...</h2>\n          <p>{percentage}%</p>\n        </>\n      )}\n    </Root>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button/Button\";\n\nconst Root = styled.div`\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  color: white;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  h2 {\n    font-size: 5vmin;\n  }\n\n  p {\n    margin-top: 24px;\n    margin-bottom: 40px;\n  }\n\n  button {\n  }\n`;\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.error) {\n      // Error path\n      return (\n        <Root>\n          <h2>\n            Oooop....\n            <br />\n            Something went wrong :(\n          </h2>\n          <p>We are very sorry for that, please reload the page</p>\n          <Button href=\"/main-menu\">Reload Page</Button>\n        </Root>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Game from \"./Components/Game/Game\";\nimport CreateUser from \"./Components/CreateUser/CreateUser\";\nimport MainMenu from \"./Components/MainMenu/MainMenu\";\nimport CreateServer from \"./Components/CreateServer/CreateServer\";\nimport JoinServer from \"./Components/JoinServer/JoinServer\";\nimport Lobby from \"./Components/WaitingLobby/Lobby\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./stores/store\";\nimport { useState } from \"react\";\nimport StartPage from \"./Components/StartPage/StartPage\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useLocation } from \"react-router-dom\";\nimport Loading from \"./Components/Shared/Loading/Loading\";\nimport GameAudio from \"./utils/audio\";\nimport ErrorBoundary from \"./Components/Shared/ErrorBoundary/ErrorBoundary\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  overflow-x: hidden;\n  /* background: radial-gradient(#5065da, #20295a); */\n  background: radial-gradient(#3d50ba, #161d3f);\n`;\n\nfunction App() {\n  const [loadingAssets, setLoadingAssets] = useState(true);\n\n  const location = useLocation();\n\n  const onLoaded = () => {\n    GameAudio.playMusic(\"music\");\n    setLoadingAssets(false);\n  };\n\n  if (loadingAssets) return <Loading onLoaded={onLoaded} />;\n\n  return (\n    <Root>\n      <Provider store={store}>\n        <AnimatePresence exitBeforeEnter>\n          <ErrorBoundary>\n            <Routes location={location} key={location.key}>\n              <Route\n                key={\"/create-user\"}\n                path=\"/create-user\"\n                element={<CreateUser />}\n              />\n              <Route\n                key={\"/main-menu\"}\n                path=\"/main-menu\"\n                element={<MainMenu />}\n              />\n              <Route\n                key={\"/create-server\"}\n                path=\"/create-server\"\n                element={<CreateServer />}\n              />\n              <Route\n                key={\"/join-server\"}\n                path=\"/join-server\"\n                element={<JoinServer />}\n              />\n              <Route key={\"/game\"} path=\"/game\" element={<Game />} />\n              <Route\n                key={\"/waiting-lobby\"}\n                path=\"/waiting-lobby\"\n                element={<Lobby />}\n              />\n              <Route key={\"/\"} path=\"/\" element={<StartPage />} />\n            </Routes>\n          </ErrorBoundary>\n        </AnimatePresence>\n      </Provider>\n    </Root>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === \"production\" ? \"/catch-me-if-you-can\" : \"/\"}\n    >\n      <CssBaseline />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}